How did viewing a diff between two versions of a file help you see the bug that
was introduced?

	Shows which lines were moved and removed.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

	if something breaks, then you can go back to a version that has been fixed
	you can be more adventurous to create code that is more likely to break, but you 
	will have previous versions to fall back on.


What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manually choosing allows you to have meaningful and interpretable change in the versions of your code.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Many projects contain more than one file. These files are often linked. It is important that they are all committed
    together to make sure that the linked behavior still works.

How can you use the commands git log and git diff to view the history of files?

    git log shows all commits in the current branch

How might using version control make you more confident to make changes that
could break something?

    You'll always have a version to fall back to!

Now that you have your workspace set up, what do you want to try using Git for?

    I want to put all of my projects that I've made onto Git. Most recently, I've built Chatbuilder for the Hack Reactor
    process. I want to filter out all of the RoboChat messages that display, and then pretty it up a bit with some CSS
    once I learn it in the prep course.
